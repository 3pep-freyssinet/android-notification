require('dotenv').config();
const jwt        = require('jsonwebtoken');
const JWT_SECRET = process.env.JWT_SECRET;

module.exports = (req, res, next) => {
    console.log('auth_pins start ...');
    try {
        // Check for the Authorization header
        const authHeader = req.headers.authorization;

        if (!authHeader || !authHeader.startsWith('Bearer ')) {
            console.log('auth_pins: Missing or invalid Authorization header');
            return res.status(401).json({ error: 'Unauthorized: Missing or invalid token' });
        }

        // Extract the token
        const token = authHeader.split(' ')[1];

        // Verify the token
        jwt.verify(token, JWT_SECRET, (err, decoded) => {
            if (err) {
                console.log('auth_pins: Token verification failed', err);
                return res.status(401).json({ error: 'Unauthorized: Invalid token' });
            }

            console.log('auth_pins: Token successfully verified', decoded);

            // Attach the decoded token to the request object (optional)
            req.user = decoded;

            // Call the next middleware
            next();
        });
    } catch (error) {
        console.error('auth_pins: An error occurred', error);
        res.status(500).json({ error: 'Internal Server Error' });
    }
};
